{"version":3,"sources":["components/Nav.js","components/Home.js","components/Projects.js","components/About.js","components/Skills.js","App.js","serviceWorker.js","index.js","assets/myAvatar.png"],"names":["styles","design","background","position","top","drawerDesign","opacity","color","textAlign","fontSize","Nav","from","marginTop","to","props","style","className","title","scroll","href","layout","height","avatar","paddingTop","borderRadius","Home","col","src","alt","Component","width","btn","cardTitleLong","display","marginLeft","marginRight","fontWeight","fontFamily","cardTitleShort","Projects","handleChange","tabId","setState","activeTab","toggleCategories","state","shadow","margin","border","rel","target","name","config","delay","duration","offset","onChange","ripple","banner","About","icons","Skills","duratio","icon","faJsSquare","size","faReact","faNode","faHtml5","faCss3Alt","faGit","faNpm","App","showComponentProjects","toggleProjects","e","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.557c62f1.chunk.js","sourcesContent":["import React from 'react';\nimport { Header, Navigation } from \"react-mdl\"\nimport { Spring } from \"react-spring/renderprops\";\n\nconst styles={\n    design: {\n        //background: \"#77A1D3\",  /* fallback for old browsers */\n        //background: \"#7f7fd5\",  /* fallback for old browsers */\n        //background: \"-webkit-linear-gradient(to left, #7f7fd5, #86a8e7, #91eae4)\",  /* Chrome 10-25, Safari 5.1-6 */\n        background: \"linear-gradient(to left, #7f7fd5, #86a8e7, #91eae4)\",\n        position: \"fixed\",\n        top: 0,\n    },\n    drawerDesign: {\n        background: \"#ffffff\",\n        opacity: 0.8,\n        color: \"#8088d9\",\n        textAlign: \"center\",\n        fontSize: \"20px\",\n    }\n}\nfunction Nav() {\n    return (\n        <Spring\n            from={{opacity: 0, marginTop:-500}}\n            to={{opacity:1, marginTop:0}}\n        >\n            {props => (\n                <div style={props}>\n                    <div className=\"demo-big-content\">\n                        <div  style={styles.design}>\n                            <Header title=\"Paris Cornett Development\" style={styles.design} scroll> \n                                <Navigation>\n                                    <a href=\"#\">Contact</a>\n                                    <a href=\"#\">Resume</a>\n                                    <a href=\"#\">Skills</a>\n                                    <a href=\"#\">Projects</a>\n                                </Navigation>\n                            </Header>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </Spring>\n      \n    )\n}\n\nexport default Nav\n","import React, { Component } from \"react\";\nimport { Grid, Cell } from \"react-mdl\";\nimport avatar from \"../assets/myAvatar.png\";\nimport { Spring } from 'react-spring/renderprops';\n\nconst styles={\n    layout: {\n        top: 0\n    },\n    design: {\n        //background: \"#7f7fd5\",  /* fallback for old browsers */\n        //background: \"-webkit-linear-gradient(to left, #7f7fd5, #86a8e7, #91eae4)\",  /* Chrome 10-25, Safari 5.1-6 */\n        background: \"linear-gradient(to left, #7f7fd5, #86a8e7, #91eae4)\", /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n        height: \"500px\",\n        textAlign: \"center\"    \n    },\n    avatar: {\n        height: 250,\n        position:\"relative\",\n        paddingTop: \"5em\",\n        borderRadius: 200\n    }, \n}\n\n\nclass Home extends Component {\n    render() {\n        return (\n            <Spring\n                from={{ opacity: 0 }}\n                to={{ opacity: 1 }}\n            >\n                { props => (\n                    <div style={props}>\n                        <div >\n                            <Grid style={styles.design}>\n                                <Cell col={12} style={styles.layout}>\n                                    <img \n                                    src= {avatar}\n                                    alt=\"avatar\"\n                                    style={styles.avatar}\n                                    />\n                                    \n                                </Cell>\n                            </Grid>\n                        </div>\n                    </div>\n                )}\n            </Spring>\n\n          \n        )\n    }\n}\n\nexport default Home\n","import React, { Component } from \"react\";\nimport { Tabs, Tab, Grid, Cell, Card, CardText, CardTitle, CardActions, Button, CardMenu, IconButton } from \"react-mdl\";\nimport { Spring } from 'react-spring/renderprops';\n\n\nconst styles = {\n    layout: {\n        position: \"relative\",\n        top: \"-350px\",\n        width: \"100%\",\n        height: \"600px\",\n        background: \"linear-gradient(to left, #7f7fd5, #86a8e7, #91eae4)\",\n    },\n    btn: {\n        color: \"#d46fbb\"\n    },\n    cardTitleLong: {\n        display: \"inline\",\n        position: \"relative\",\n        marginLeft: \"7em\",\n        marginRight: \"2em\",\n        fontWeight: \"bold\",\n        fontFamily: 'Josefin Sans sans-serif',\n    },\n    cardTitleShort: {\n        display: \"inline\",\n        position: \"relative\",\n        marginLeft: \"10em\",\n        marginRight: \"2em\",\n        fontWeight: \"bold\",\n        fontFamily: 'Josefin Sans sans-serif',\n    }\n}\n\nclass Projects extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { \n            activeTab: 0,\n        };\n    }\n\n    handleChange = (tabId) => {\n        this.setState({\n            activeTab: tabId\n        })\n    }\n\n    toggleCategories = () => {\n        const {activeTab} = this.state;\n        if(activeTab===0) {\n            return(\n                <Spring\n                    from={{ opacity: 0 }}\n                    to={{ opacity: 1 }}\n                >\n                   {props => (\n                       <div style={props}>\n                            <div style={{display: \"flex\"}}>   \n                                <Card shadow={0} style={{width: '512px', margin: 'auto'}}>\n                                    <CardTitle style={{color: 'black', textAlign:'center', height: '176px', background: 'url(https://images.unsplash.com/photo-1558361716-f8144bad90f3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=668&q=80) center / cover' }}></CardTitle>\n                                    <CardText>\n                                        {this.props.activeTab}\n                                    </CardText>\n                                    <CardActions border>\n                                        <Button style={styles.btn} href=\"https://github.com/pariscornett/Styls\"  rel=\"noopener noreferrer\" target=\"_blank\">Github</Button>\n                                        <Button style={styles.btn} href=\"https://styls.herokuapp.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Live Demo</Button>\n                                        <div style={styles.cardTitleShort}>STYLS</div>\n                                    </CardActions>\n                                    <CardMenu style={{color: '#d46fbb'}}>\n                                        <IconButton name=\"share\" href=\"mailto:?subject=I wanted you to see this up and coming developer's website&amp;body=Check out this site https://styls.herokuapp.com/\" />\n                                    </CardMenu>\n                                </Card>  \n                            </div>\n                       </div>\n                   )}\n              </Spring>\n            )\n        } else if(activeTab===1) {\n            return(\n            <Spring\n                from={{ opacity: 0 }}\n                to={{ opacity: 1 }}\n            >\n               {props => (\n                   <div style={props}>\n                        <div style={{display: \"flex\"}}>\n                            <Card shadow={0} style={{width: '512px', margin: 'auto'}}>\n                                <CardTitle style={{color: 'black', height: '176px', background: 'url(https://images.unsplash.com/photo-1508885368104-a4871600f1e0?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1336&q=80) center / cover'}}></CardTitle>\n                                <CardText>\n                                    {this.props.activeTab}\n                                </CardText>\n                                <CardActions border>\n                                    <Button style={styles.btn} href=\"https://github.com/pariscornett/Thats-Trashy\" rel=\"noopener noreferrer\" target=\"_blank\">Github</Button>\n                                    <Button style={styles.btn} href=\"https://pariscornett.github.io/Thats-Trashy/\" rel=\"noopener noreferrer\" target=\"_blank\">Live Demo</Button>\n                                    <div style={styles.cardTitleLong}>THAT'S TRASHY</div>\n                                </CardActions>\n                                <CardMenu style={{color: '#d46fbb'}}>\n                                    <IconButton name=\"share\" href=\"mailto:?subject=I wanted you to see this up and coming developer's website&amp;body=Check out this site https://pariscornett.github.io/Thats-Trashy/\" />\n                                </CardMenu>\n                            </Card>  \n                        </div>\n                   </div>\n               )}\n          </Spring>\n               \n            )\n        } else if(activeTab===2) {\n            return(\n            <Spring\n                from={{ opacity: 0 }}\n                to={{ opacity: 1 }}\n            >\n               {props => (\n                   <div style={props}>\n                        <div style={{display: \"flex\"}}>\n                            <Card shadow={0} style={{width: '512px', margin: 'auto'}}>\n                                <CardTitle style={{color: 'black', height: '176px', background: 'url(https://images.unsplash.com/photo-1558361716-f8144bad90f3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=668&q=80) center / cover'}}></CardTitle>\n                                <CardText>\n                                    {this.props.activeTab}\n                                </CardText>\n                                <CardActions border>\n                                    <Button style={styles.btn} href=\"https://github.com/pariscornett/Styls\" rel=\"noopener noreferrer\" target=\"_blank\">Github</Button>\n                                    <Button style={styles.btn} href=\"https://styls.herokuapp.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Live Demo</Button>\n                                    <div style={styles.cardTitleShort}>STYLS</div>\n                                </CardActions>\n                                <CardMenu style={{color: '#d46fbb'}}>\n                                    <IconButton name=\"share\" href=\"mailto:?subject=I wanted you to see this up and coming developer's website&amp;body=Check out this site https://styls.herokuapp.com/\" />\n                                </CardMenu>\n                            </Card>   \n                        </div>\n                   </div>\n               )}\n          </Spring>\n          \n            )\n        } else if(activeTab===3) {\n           return(\n            <Spring\n            from={{ opacity: 0 }}\n            to={{ opacity: 1 }}\n        >\n            {props => (\n                <div style={props}>\n                    <div style={{display: \"flex\"}}>\n                        <Card shadow={0} style={{width: '512px', margin: 'auto'}}>\n                            <CardTitle style={{color: 'black', height: '176px', background: 'url(https://images.unsplash.com/photo-1465393884053-5b522c1d006b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1334&q=80) center / cover'}}></CardTitle>\n                            <CardText>\n                                {this.props.activeTab}\n                            </CardText>\n                            <CardActions border>\n                                <Button style={styles.btn} href=\"https://github.com/pariscornett/Hike-It\" rel=\"noopener noreferrer\" target=\"_blank\">Github</Button>\n                                <Button style={styles.btn} href=\"https://shielded-springs-34062.herokuapp.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Live Demo</Button>\n                                <div style={styles.cardTitleShort}>HIKE IT!</div>\n                            </CardActions>\n                            <CardMenu style={{color: '#d46fbb'}}>\n                                <IconButton name=\"share\" href=\"mailto:?subject=I wanted you to see this up and coming developer's website&amp;body=Check out this site https://shielded-springs-34062.herokuapp.com/\" />\n                            </CardMenu>\n                        </Card>  \n                    </div>\n                </div>\n            )}\n            </Spring>\n           \n           )\n        }\n    }\n\n\n    render() {\n        return (\n            <Spring\n                from={{opacity:0}}\n                to={{opacity:1}}\n                config={{delay:3000, duration:1000, }}\n            >\n                {props => (\n                    <div style={props}>\n                        <div className=\"demo-tabs\" style={styles.layout}>\n                            <Grid>\n                                <Cell col={6} offset={3}>\n                                    <Tabs activeTab={this.state.activeTab} onChange={this.handleChange} ripple>\n                                        <Tab style={{color:\"#fff\"}}>React</Tab>\n                                        <Tab style={{color:\"#fff\"}}>JavaScript</Tab>\n                                        <Tab style={{color:\"#fff\"}}>MongoDB</Tab>\n                                        <Tab style={{color:\"#fff\"}}>MySQL</Tab>\n                                    </Tabs>\n                                    <section>\n                                        <div className=\"content\">\n                                            {this.toggleCategories()}\n                                        </div>\n                                    </section>\n                                </Cell>\n                            </Grid> \n                        </div> \n                    </div>\n                )}\n            </Spring>\n        \n        )\n    }\n}\n\nexport default Projects\n","import React, { Component } from 'react'\n//import Projects from \"./Projects\";\nimport { Spring } from \"react-spring/renderprops\";\n\n\nconst styles = {\n    layout: {\n        position: \"relative\",\n        top:\"-100px\",\n        background: \"linear-gradient(to left, #7f7fd5, #86a8e7, #91eae4)\",\n        height: \"500px\",\n        width: \"100%\"\n    },\n    banner: {\n        position:\"relative\",\n        color: \"#ffffff\",\n        width: \"100%\",\n        textAlign: \"center\"\n    }\n}\n\nclass About extends Component {\n    render() {\n        return (\n            <Spring\n                from={{opacity:0}}\n                to={{opacity:1}}\n            >\n                {props => (\n                    <div style={props}>\n                        <div style={styles.layout} >\n                            <Spring\n                                from={{opacity: 0}}\n                                to={{opacity:1}}\n                                config={{delay: 1000, duration: 1000}}\n                            >\n                                { props => (\n                                    <div style={props}>\n                                        <h3 style={styles.banner}>Hi, my name's Paris...</h3>\n                                        {/* <Projects /> */}\n                                        <Spring\n                                            from={{opacity:0}}\n                                            to={{opacity:1}}\n                                            config={{delay:2000, duration: 2000}}\n                                        >\n                                            {props => (\n                                                <div style= {props}>\n                                                    <h3 style={styles.banner}> ...I'm a web developer based in Nashville, TN</h3>\n                                                </div>\n                                            )}\n                                        </Spring>\n                                    </div>\n                                )}\n                            </Spring>\n                        </div>\n                    </div>\n                )}\n            </Spring>\n           \n            \n        )\n    }\n}\n\nexport default About\n","import React from 'react'\nimport { Grid, Cell } from \"react-mdl\";\nimport { Spring } from 'react-spring/renderprops';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faJsSquare, faReact, faNode, faHtml5, faCss3Alt, faGit, faNpm} from '@fortawesome/free-brands-svg-icons'\n\nconst styles = {\n    layout: {\n        position: \"relative\",\n        top: -400,\n        textAlign:\"center\",\n        background: \"linear-gradient(to left, #7f7fd5, #86a8e7, #91eae4)\",\n    },\n    icons: {\n        display: \"inline\",\n        margin: \"0 30 0 30\"\n    }\n}\nfunction Skills() {\n    return (\n        <Spring\n        from={{opacity: 0}}\n        to={{opacity:1}}\n        config={{delay: 3000, duratio: 1000}}\n        >\n            {props => (\n                <div style={props}>\n                    <Grid style={styles.layout}>\n                        <Cell col={12}>\n                            <div >\n                              <FontAwesomeIcon icon={faJsSquare} size=\"7x\" style={styles.icons} />\n                              <FontAwesomeIcon icon={faReact} size=\"7x\"style={styles.icons} />\n                              <FontAwesomeIcon icon={faNode} size=\"7x\" style={styles.icons} />\n                              <FontAwesomeIcon icon={faHtml5} size=\"7x\" style={styles.icons} />\n                              <FontAwesomeIcon icon={faCss3Alt} size=\"7x\" style={styles.icons} />\n                              <FontAwesomeIcon icon={faGit} size=\"7x\" style={styles.icons} />\n                              <FontAwesomeIcon icon={faNpm} size=\"7x\" style={styles.icons} />\n                            </div>\n                        </Cell>\n                    </Grid>\n                </div>\n            )}\n        </Spring>\n     \n    )\n}\n\nexport default Skills\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Transition, animated } from \"react-spring/renderprops\";\nimport Nav from \"./components/Nav\";\nimport Home from \"./components/Home\";\n//import Contact from \"./components/Contact\";\nimport Projects from \"./components/Projects\";\nimport About from \"./components/About\";\n//import ProjectCard from \"./components/ProjectCard\";\nimport Skills from \"./components/Skills\";\nimport \"./App.css\";\n\n\n\nclass App extends Component{\n  state={\n    showComponentProjects: false \n  }\n\n  toggleProjects = e => this.setState({ showComponentProjects: !this.state.showComponentProjects })\n\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Nav />\n        <Home />\n        <About />\n        <Skills />\n        <Projects />\n      </div>\n    )\n  }\n \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/myAvatar.9fbe5ec4.png\";"],"sourceRoot":""}